name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cache-and-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies for frontend
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache dependencies for backend
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Save test results for frontend and backend
        if: always()
        run: |
          mkdir -p test-results/frontend
          mkdir -p test-results/backend
          cp ./frontend/test-results.xml test-results/frontend/
          cp ./backend/test-results.xml test-results/backend/
        continue-on-error: true

      - name: Upload test results as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

  build-frontend:
    runs-on: ubuntu-latest
    needs: cache-and-artifacts
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image for frontend
        run: docker build -t sohaibshoukat56/weather-frontend -f ./frontend/frontend_dockerfile ./frontend

      - name: Push Docker image for frontend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push sohaibshoukat56/weather-frontend

  build-backend:
    runs-on: ubuntu-latest
    needs: cache-and-artifacts
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image for backend
        run: docker build -t sohaibshoukat56/weather-backend -f ./backend/backend_dockerfile ./backend

      - name: Push Docker image for backend
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker push sohaibshoukat56/weather-backend

  security-sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run SonarQube Scanner
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner -Dsonar.projectKey=weather-app \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=$SONAR_HOST_URL \
                        -Dsonar.login=$SONAR_TOKEN
