name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cache-and-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies for frontend
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Cache dependencies for backend
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Save test results for frontend and backend
        if: always()
        run: |
          mkdir -p test-results/frontend
          mkdir -p test-results/backend
          cp ./frontend/test-results.xml test-results/frontend/
          cp ./backend/test-results.xml test-results/backend/
        continue-on-error: true

      - name: Upload test results as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results

  build-and-push-docker-images:
    needs: cache-and-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend image
        run: |
          docker build -f ./frontend/frontend_dockerfile -t sohaibshoukat56/weather-frontend ./frontend
          docker push sohaibshoukat56/weather-frontend

      - name: Build and push backend image
        run: |
          docker build -f ./backend/backend_dockerfile -t sohaibshoukat56/weather-backend ./backend
          docker push sohaibshoukat56/weather-backend

  security-sast:
    needs: build-and-push-docker-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SonarScanner
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner-cli.zip -d $HOME
          export PATH="$HOME/sonar-scanner-4.7.0.2747-linux/bin:$PATH"

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=weather-app \
          -Dsonar.organization=your-organization \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
